"""empty message

Revision ID: aefef36a7b1a
Revises: 661469a4563e
Create Date: 2025-06-12 10:20:42.343415

"""

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "aefef36a7b1a"
down_revision = "661469a4563e"
branch_labels = None
depends_on = None


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table("crm_communique", schema=None) as batch_op:
    #     batch_op.alter_column(
    #         "statut",
    #         existing_type=postgresql.ENUM(
    #             "DRAFT",
    #             "PRIVATE",
    #             "PENDING",
    #             "PUBLIC",
    #             "REJECTED",
    #             "EXPIRED",
    #             "ARCHIVED",
    #             "DELETED",
    #             name="com_publicationstatus",
    #         ),
    #         type_=sa.Enum(
    #             "DRAFT",
    #             "PRIVATE",
    #             "PENDING",
    #             "PUBLIC",
    #             "REJECTED",
    #             "EXPIRED",
    #             "ARCHIVED",
    #             "DELETED",
    #             name="publicationstatus",
    #         ),
    #         existing_nullable=False,
    #     )

    # with op.batch_alter_table("frt_content", schema=None) as batch_op:
    #     batch_op.alter_column(
    #         "status",
    #         existing_type=postgresql.ENUM(
    #             "DRAFT", "PUBLIC", "ARCHIVED", name="poststatus3"
    #         ),
    #         type_=sa.Enum("DRAFT", "PUBLIC", "ARCHIVED", name="poststatus"),
    #         existing_nullable=False,
    #     )
    #     batch_op.alter_column(
    #         "publisher_type",
    #         existing_type=postgresql.ENUM("AGENCY", "MEDIA", name="publishertype2"),
    #         type_=sa.Enum("AGENCY", "MEDIA", name="publishertype"),
    #         existing_nullable=False,
    #     )

    op.create_table(
        "evr_event",
        sa.Column("chapo", sa.String(), nullable=False),
        sa.Column("contenu", sa.String(), nullable=False),
        sa.Column(
            "statut",
            sa.Enum(
                "DRAFT",
                "PRIVATE",
                "PENDING",
                "PUBLIC",
                "REJECTED",
                "EXPIRED",
                "ARCHIVED",
                "DELETED",
                name="evr_publicationstatus",
            ),
            nullable=False,
        ),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column(
            "start_time",
            sqlalchemy_utils.types.arrow.ArrowType(timezone=True),
            nullable=True,
        ),
        sa.Column(
            "end_time",
            sqlalchemy_utils.types.arrow.ArrowType(timezone=True),
            nullable=True,
        ),
        sa.Column("publisher_id", sa.BigInteger(), nullable=True),
        sa.Column("titre", sa.String(), nullable=False),
        sa.Column("event_type", sa.String(), nullable=False),
        sa.Column("sector", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("language", sa.String(), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column(
            "created_at",
            sqlalchemy_utils.types.arrow.ArrowType(timezone=True),
            nullable=False,
        ),
        sa.Column(
            "modified_at",
            sqlalchemy_utils.types.arrow.ArrowType(timezone=True),
            nullable=True,
        ),
        sa.Column(
            "deleted_at",
            sqlalchemy_utils.types.arrow.ArrowType(timezone=True),
            nullable=True,
        ),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["aut_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["publisher_id"],
            ["crp_organisation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # ### end Alembic commands ###
