<div x-data="{
    hasHeader: true,
    isLoading: false,
    selectedRecords: [],
    shouldCheckUniqueSelection: true,

    init: function () {
        // $wire.on('deselectAllTableRecords', () => this.deselectAllRecords());

        $watch('selectedRecords', () => {
            if (! this.shouldCheckUniqueSelection) {
                this.shouldCheckUniqueSelection = true;
                return;
            }
            this.selectedRecords = [...new Set(this.selectedRecords)];
            this.shouldCheckUniqueSelection = false;
        })
    },

    mountBulkAction: function (name) {
        // $wire.mountTableBulkAction(name, this.selectedRecords);
    },

    toggleSelectRecordsOnPage: function () {
        let keys = this.getRecordsOnPage()

        if (this.areRecordsSelected(keys)) {
            this.deselectRecords(keys);
            return;
        }

        this.selectRecords(keys);
    },

    getRecordsOnPage: function () {
        let keys = [];

        for (checkbox of $el.getElementsByClassName('table-row-checkbox')) {
            keys.push(checkbox.value);
        }

        return keys;
    },

    selectRecords: function (keys) {
        for (key of keys) {
            if (this.isRecordSelected(key)) {
                continue
            }

            this.selectedRecords.push(key)
        }
    },

    deselectRecords: function (keys) {
        for (key of keys) {
            let index = this.selectedRecords.indexOf(key)

            if (index === -1) {
                continue
            }

            this.selectedRecords.splice(index, 1)
        }
    },

    selectAllRecords: async function () {
        this.isLoading = true;
        // this.selectedRecords = (await $wire.getAllTableRecordKeys()).map((key) => key.toString())
        this.isLoading = false;
    },

    deselectAllRecords: function () {
        this.selectedRecords = [];
    },

    isRecordSelected: function (key) {
        return this.selectedRecords.includes(key);
    },

    areRecordsSelected: function (keys) {
        return keys.every(key => this.isRecordSelected(key));
    },
}">
  <div class="border border-gray-300 shadow bg-white rounded">
    <!-- header -->
    <div x-show="hasHeader = (true || selectedRecords.length)">

      <div x-show="true || selectedRecords.length" class="flex items-center justify-between p-2 h-14">
        <div>
          <div x-data="{ isOpen: false }"
               class="relative mr-2" x-show="selectedRecords.length" style="display: none;">
            <button type="button"
                    class="flex items-center justify-center w-10 h-10 rounded-full hover:bg-gray-500/5 focus:outline-none text-primary-500 focus:bg-primary-500/10"
                    x-on:click="isOpen = ! isOpen;">
              <span class="sr-only">
                  Open actions
              </span>

              <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                   stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
              </svg>
            </button>

            <div x-show="isOpen" x-on:click.away="isOpen = false" x-transition:enter="transition"
                 x-transition:enter-start="-translate-y-1 opacity-0" x-transition:enter-end="translate-y-0 opacity-100"
                 x-transition:leave="transition" x-transition:leave-start="translate-y-0 opacity-100"
                 x-transition:leave-end="-translate-y-1 opacity-0"
                 class="absolute z-10 mt-2 shadow-xl rounded-xl w-52 top-full" style="display: none;">
              <ul class="py-1 space-y-1 overflow-hidden bg-white shadow rounded-xl">
                <li x-on:click="mountBulkAction('delete')">
                  <button type="button"
                          class="flex items-center w-full h-8 px-3 text-sm font-medium focus:outline-none hover:text-white focus:text-white group hover:bg-danger-600 focus:bg-danger-700">
                    <svg
                        class="mr-2 -ml-1 rtl:ml-2 rtl:-mr-1 group-hover:text-white group-focus:text-white w-6 h-6 text-danger-500"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"
                        aria-hidden="true">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                    <span>Delete selected</span>

                  </button>
                </li>
              </ul>
            </div>
          </div>
        </div>

        <div class="w-full md:w-auto flex items-center gap-2 md:max-w-md">
          <div class="flex-1">
            <div>
              <label for="tableSearchQueryInput" class="sr-only">
                Search
              </label>

              <div class="relative group">
                <span
                    class="absolute inset-y-0 left-0 flex items-center justify-center w-9 h-9 text-gray-400 pointer-events-none group-focus-within:text-primary-500">
                    {{ icon("magnifying-glass", type="outline", class="h-5 w-5") }}
                </span>

                <input wire:model.debounce.1s="tableSearchQuery" id="tableSearchQueryInput" placeholder="Search"
                       type="search" autocomplete="off"
                       class="block w-full h-9 pl-9 placeholder-gray-400 transition duration-75 border-gray-200 rounded-lg shadow-sm focus:border-primary-600 focus:ring-1 focus:ring-inset focus:ring-primary-600">
              </div>
            </div>
          </div>

        </div>
      </div>
    </div>

    <div class="overflow-y-auto relative border-t"
         x-bind:class="
          {
            'rounded-t-xl': !hasHeader,
            'border-t': hasHeader,
          }
        ">
      <table class="w-full text-left rtl:text-right divide-y table-auto">
        <thead>
        <tr class="bg-gray-50">
          <th class="w-4 px-4 whitespace-nowrap">
            <input
                class="border-gray-300 rounded shadow-sm text-primary-600 focus:border-primary-600 focus:ring focus:ring-primary-200 focus:ring-opacity-50"
                x-on:click="toggleSelectRecordsOnPage"
                x-bind:checked="
                  if (areRecordsSelected(getRecordsOnPage())) {
                      $el.checked = true;
                      return 'checked';
                  }

                  $el.checked = false;
                  return null;
                " type="checkbox">
          </th>

          {% for column in spec.columns %}
            <th class="px-4 py-2"
                {% if 'width' in column %}
                style="width: {{ column.width }};"
                {% endif %}
            >
              <button wire:click="sortTable('{{ column.name }}')" type="button"
                      class="flex items-center whitespace-nowrap space-x-1 rtl:space-x-reverse font-medium text-sm text-gray-600"
              >
              <span>
                  {{ column.label }}
              </span>
              </button>
            </th>
          {% endfor %}

          {% if spec.actions is defined and spec.actions %}
            <th class="w-5"></th>
          {% endif %}
        </tr>
        </thead>

        <tbody class="divide-y whitespace-nowrap">
        <tr class="bg-primary-500/10" x-show="selectedRecords.length" style="display: none;">
          <td class="px-4 py-2 whitespace-nowrap text-sm" colspan="10">
            <div>
            <span x-show="isLoading" style="display: none;">
                <svg class="inline-block animate-spin w-4 h-4 mr-3 text-primary-600" xmlns="http://www.w3.org/2000/svg"
                     viewBox="0 0 24 24" fill="currentColor">
                    <path d="M2 12C2 6.47715 6.47715 2 12 2V5C8.13401 5 5 8.13401 5 12H2Z"></path>
                </svg>
            </span>

              <span x-text="
                singularText = '1 record selected.';
                pluralText = '2 records selected.';

                return (selectedRecords.length === 1) ?
                    singularText.replace('1', selectedRecords.length) :
                    pluralText.replace('2', selectedRecords.length);
            ">0 records selected.</span>

              <span x-show="50 !== selectedRecords.length">
                <button x-on:click="selectAllRecords" class="text-primary-600 text-sm font-medium">
                    Select all 50.
                </button>
            </span>

              <span>
                <button x-on:click="deselectAllRecords" class="text-primary-600 text-sm font-medium">
                    Deselect all.
                </button>
            </span>
            </div>
          </td>
        </tr>

        {% for line in lines %}
          <tr wire:key="1">
            <th class="w-4 px-4 whitespace-nowrap">
              <input
                  class="border-gray-300 rounded shadow-sm text-primary-600 focus:border-primary-600 focus:ring focus:ring-primary-200 focus:ring-opacity-50 table-row-checkbox"
                  x-model="selectedRecords" value="1" type="checkbox">
            </th>

            {% for column in line.columns %}
              <td>
                <a href="{{ line.url }}" class="block">
                  <div class="px-4 py-3 text-gray-700">
                    {{ present_value(column) }}
                  </div>
                </a>
              </td>
            {% endfor %}

            {% if spec.actions is defined and "edit" in spec.actions %}
              <td class="px-4 py-3 whitespace-nowrap">
                <div class="flex items-center justify-center gap-4">
                  <a class="hover:underline focus:outline-none focus:underline text-primary-600 hover:text-primary-500 text-sm font-medium"
                     href="{{ line.url }}">
                    Edit
                  </a>

                </div>
              </td>
            {% endif %}
          </tr>
        {% endfor %}

        </tbody>

      </table>
    </div>

    <div class="p-2 border-t">
      <nav role="navigation" aria-label="Pagination Navigation" class="flex items-center justify-between">
        <div class="flex justify-between items-center flex-1 lg:hidden">
          <div class="w-10">
          </div>

          <div class="flex items-center space-x-2 rtl:space-x-reverse">
            <select wire:model="tableRecordsPerPage" id="tableRecordsPerPageSelect"
                    class="h-8 text-sm pr-8 leading-none transition duration-75 border-gray-200 rounded-lg shadow-sm focus:border-primary-600 focus:ring-1 focus:ring-inset focus:ring-primary-600">
              <option value="5">5</option>
              <option value="10">10</option>
              <option value="25">25</option>
              <option value="50">50</option>
            </select>

            <label for="tableRecordsPerPageSelect" class="text-sm font-medium">
              per page
            </label>
          </div>

          <div class="w-10">
            <button type="button"
                    class="flex items-center justify-center w-10 h-10 rounded-full hover:bg-gray-500/5 focus:outline-none text-primary-500 focus:bg-primary-500/10"
                    wire:click="nextPage('page')" rel="next">
                    <span class="sr-only">
                Next
            </span>

              <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                   stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </button>
          </div>
        </div>

        <div class="hidden flex-1 items-center lg:grid grid-cols-3">
          <div class="flex items-center">
            <div class="pl-2 text-sm font-medium">
              Showing 1 to 10 of 50 results
            </div>
          </div>

          <div class="flex items-center justify-center">
            <div class="flex items-center space-x-2 rtl:space-x-reverse">
              <select wire:model="tableRecordsPerPage" id="tableRecordsPerPageSelect"
                      class="h-8 text-sm pr-8 leading-none transition duration-75 border-gray-200 rounded-lg shadow-sm focus:border-primary-600 focus:ring-1 focus:ring-inset focus:ring-primary-600">
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="25">25</option>
                <option value="50">50</option>
              </select>

              <label for="tableRecordsPerPageSelect" class="text-sm font-medium">
                per page
              </label>
            </div>
          </div>

          <div class="flex items-center justify-end">
            <div class="py-3 border rounded-lg">
              <ol class="flex items-center text-sm text-gray-500 divide-x divide-gray-300">


                <li>
                  <button type="button"
                          class="relative flex items-center justify-center font-medium min-w-[2rem] px-1.5 h-8 -my-3 rounded-md focus:outline-none transition text-primary-600 focus:underline bg-primary-500/10 ring-2 ring-primary-500"
                          wire:click="gotoPage(1, 'page')" aria-label="Go to page 1" wire:key="pagination-page-page1">

                    <span>1</span>
                  </button>
                </li>
                <li>
                  <button type="button"
                          class="relative flex items-center justify-center font-medium min-w-[2rem] px-1.5 h-8 -my-3 rounded-md focus:outline-none hover:bg-gray-500/5 focus:bg-primary-500/10 focus:ring-2 focus:ring-primary-500 focus:text-primary-600 transition"
                          wire:click="gotoPage(2, 'page')" aria-label="Go to page 2" wire:key="pagination-page-page2">

                    <span>2</span>
                  </button>
                </li>
                <li>
                  <button type="button"
                          class="relative flex items-center justify-center font-medium min-w-[2rem] px-1.5 h-8 -my-3 rounded-md focus:outline-none hover:bg-gray-500/5 focus:bg-primary-500/10 focus:ring-2 focus:ring-primary-500 focus:text-primary-600 transition"
                          wire:click="gotoPage(3, 'page')" aria-label="Go to page 3" wire:key="pagination-page-page3">

                    <span>3</span>
                  </button>
                </li>
                <li>
                  <button type="button"
                          class="relative flex items-center justify-center font-medium min-w-[2rem] px-1.5 h-8 -my-3 rounded-md focus:outline-none hover:bg-gray-500/5 focus:bg-primary-500/10 focus:ring-2 focus:ring-primary-500 focus:text-primary-600 transition"
                          wire:click="gotoPage(4, 'page')" aria-label="Go to page 4" wire:key="pagination-page-page4">

                    <span>4</span>
                  </button>
                </li>
                <li>
                  <button type="button"
                          class="relative flex items-center justify-center font-medium min-w-[2rem] px-1.5 h-8 -my-3 rounded-md focus:outline-none hover:bg-gray-500/5 focus:bg-primary-500/10 focus:ring-2 focus:ring-primary-500 focus:text-primary-600 transition"
                          wire:click="gotoPage(5, 'page')" aria-label="Go to page 5" wire:key="pagination-page-page5">

                    <span>5</span>
                  </button>
                </li>

                <li>
                  <button type="button"
                          class="relative flex items-center justify-center font-medium min-w-[2rem] px-1.5 h-8 -my-3 rounded-md focus:outline-none hover:bg-gray-500/5 focus:bg-primary-500/10 focus:ring-2 focus:ring-primary-500 transition text-primary-600"
                          wire:click="nextPage('page')" aria-label="Next" rel="next">
                    <svg class="w-5 h-5 rtl:rotate-180" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
                         fill="currentColor" aria-hidden="true">
                      <path fill-rule="evenodd"
                            d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                            clip-rule="evenodd"></path>
                    </svg>
                    <span></span>
                  </button>
                </li>
              </ol>
            </div>
          </div>
        </div>
      </nav>
    </div>
  </div>


  <form wire:submit.prevent="callMountedTableAction">

    <div x-data="{ isOpen: false }"
         x-on:close-modal.window="if ($event.detail.id === 'App\\Filament\\Resources\\Shop\\ProductResource\\Pages\\ListProducts-action') isOpen = false"
         x-on:open-modal.window="if ($event.detail.id === 'App\\Filament\\Resources\\Shop\\ProductResource\\Pages\\ListProducts-action') isOpen = true"
         role="dialog" aria-modal="true" class="block">


      <div x-show="isOpen" x-transition:enter="ease duration-300" x-transition:enter-start="opacity-0"
           x-transition:enter-end="opacity-100" x-transition:leave="ease duration-300"
           x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0"
           class="fixed inset-0 z-40 flex items-center min-h-screen p-4 overflow-y-auto transition"
           style="display: none;">
        <button x-on:click="isOpen = false" type="button" aria-hidden="true"
                class="fixed inset-0 w-full h-full bg-black/50 focus:outline-none"></button>

        <div x-show="isOpen" x-trap="isOpen" x-on:keydown.window.escape="isOpen = false"
             x-transition:enter="ease duration-300" x-transition:enter-start="translate-y-8"
             x-transition:enter-end="translate-y-0" x-transition:leave="ease duration-300"
             x-transition:leave-start="translate-y-0" x-transition:leave-end="translate-y-8"
             class="relative w-full mt-auto md:mb-auto cursor-pointer" style="display: none;">
          <div class="w-full mx-auto p-2 space-y-2 bg-white rounded-xl cursor-default max-w-sm">
            <div class="space-y-2"></div>
          </div>
        </div>
      </div>
    </div>
  </form>

  <form wire:submit.prevent="callMountedTableBulkAction">

    <div x-data="{ isOpen: false }"
         x-on:close-modal.window="if ($event.detail.id === 'App\\Filament\\Resources\\Shop\\ProductResource\\Pages\\ListProducts-bulk-action') isOpen = false"
         x-on:open-modal.window="if ($event.detail.id === 'App\\Filament\\Resources\\Shop\\ProductResource\\Pages\\ListProducts-bulk-action') isOpen = true"
         role="dialog" aria-modal="true" class="block">


      <div x-show="isOpen" x-transition:enter="ease duration-300" x-transition:enter-start="opacity-0"
           x-transition:enter-end="opacity-100" x-transition:leave="ease duration-300"
           x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0"
           class="fixed inset-0 z-40 flex items-center min-h-screen p-4 overflow-y-auto transition"
           style="display: none;">
        <button x-on:click="isOpen = false" type="button" aria-hidden="true"
                class="fixed inset-0 w-full h-full bg-black/50 focus:outline-none"></button>

        <div x-show="isOpen" x-trap="isOpen" x-on:keydown.window.escape="isOpen = false"
             x-transition:enter="ease duration-300" x-transition:enter-start="translate-y-8"
             x-transition:enter-end="translate-y-0" x-transition:leave="ease duration-300"
             x-transition:leave-start="translate-y-0" x-transition:leave-end="translate-y-8"
             class="relative w-full mt-auto md:mb-auto cursor-pointer" style="display: none;">
          <div class="w-full mx-auto p-2 space-y-2 bg-white rounded-xl cursor-default max-w-sm">
            <div class="space-y-2"></div>
          </div>
        </div>
      </div>
    </div>
  </form>
</div>
