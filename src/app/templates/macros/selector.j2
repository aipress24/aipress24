{% macro selector(label, options, state) %}
  <div
      x-data="{
        open: false,
        toggle() {
            if (this.open) {
                return this.close()
            }

            this.open = true
        },
        close(focusAfter) {
            this.open = false

            focusAfter && focusAfter.focus()
        }
    }"
      x-on:keydown.escape.prevent.stop="close($refs.button)"
      x-on:focusin.window="! $refs.panel.contains($event.target) && close()"
      x-id="['dropdown-button']"
      class="relative"
  >
    <!-- Button -->
    <button
        x-ref="button"
        x-on:click="toggle()"
        :aria-expanded="open"
        :aria-controls="$id('dropdown-button')"
        type="button"
        class="bg-white border text-gray-600 border-gray-200 rounded px-4 py-2 focus:outline-none focus:ring-4 focus:ring-aqua-400"
    >
      <span>{{ label }}</span>
      <span aria-hidden="true">&darr;</span>
    </button>

    <!-- Panel -->
    <div
        x-ref="panel"
        x-show="open"
        x-transition.origin.top.left
        x-on:click.outside="close($refs.button)"
        :id="$id('dropdown-button')"
        style="display: none;"
        class="max-h-[32rem] w-[16rem] overflow-auto absolute z-20 left-0 mt-2 bg-white border border-gray-200"
    >
      {% for option in options %}
        <div>
          <button
              hx-post=""
              hx-trigger="click"
              hx-target="body"
              class="block px-4 py-2 text-left text-sm hover:bg-gray-100 focus:outline-none focus:ring focus:ring-aqua-400 disabled:text-gray-500">
            {{ option.label }}
            <input type="hidden" name="toggle-filter" value="{{ option.id }}">
          </button>
        </div>
      {% endfor %}
    </div>
  </div>
{% endmacro %}
