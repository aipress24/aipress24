<section class="section mx-auto max-w-5xl">

              <span
                  class="tooltip tooltip-bottom"
                  data-tip="Publié par une agence agréé par la commission paritaire des publications et agences de presse (CPPAP)">
              {{ icon("newspaper", class="ml-2 h-6 w-6 text-orange-400") }}
            </span>

  <div class="container">
    <h1 class="title is-3">littleBIGtable</h1>
    <p class="content is-size-5">This is the complete example with custom settings</p>
    <p class="content">Passing in custom options is easy, just create an options object with the properties you want to
      override and pass it through the <code>x-data</code> attribute</p>

    <pre class="mb-6"><code>let options = {
    // set this to wherever your data comes from
    url: 'http://localhost:8080/examples/json.php',
    // this is the prefix for the page limit preference, you can may want to change this on a per table basis
    key_prefix: 'lbt',
    // change the default status bar messages as you see fit
    messages: {
        loading: 'Loading...',
        failed: 'Loading failed',
        summary: 'rows'     // this may be null, 'rows' or 'pages'
    },
    // formatters change the way cell data is displayed
    formatters: {},
    // the location of the SVG icons file
    icon: '../dist/icons.svg',
}</code></pre>


    <p class="content">
      Now pass in your options to the component &lt;div&gt;
    </p>
    <pre class="mb-6"><code>&lt;div x-data="littleBIGtable(options)" x-init="init()"&gt;</code></pre>

    <div x-data="littleBIGtable(options)">
      <div class="level">
        <div class="level-left">
          <div class="field is-horizontal">
            <div class="field-label is-normal">
              <label class="label">Search</label>
            </div>
            <div class="field-body">
              <div class="field is-narrow">
                <div class="control">
                  <input class="input" type="text" placeholder="Start typing..." x-model="params.search"
                         @keyup.debounce.350="doSearch()">
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="level-right">
          <div class="field is-horizontal">
            <div class="field-label is-normal">
              <label class="label">Show</label>
            </div>
            <div class="field-body">
              <div class="field is-narrow">
                <div class="control">
                  <div class="select is-fullwidth">
                    <select @change="setLimit()" x-model="params.limit">
                      <option value="10">10 per page</option>
                      <option value="15">15 per page</option>
                      <option value="25">25 per page</option>
                      <option value="50">50 per page</option>
                      <option value="100">100 per page</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <table class="table is-fullwidth is-hoverable">
        <thead>
        <tr>
          <th class="has-text-left">State
            <button class="button is-small is-text" type="button" x-html="getSortIcon('state')"
                    @click="doSort('state')"></button>
          </th>
          <th class="has-text-left">County
            <button class="button is-small is-text" type="button" x-html="getSortIcon('county')"
                    @click="doSort('county')"></button>
          </th>
          <th class="has-text-centered">Year
            <button class="button is-small is-text" type="button" x-html="getSortIcon('year')"
                    @click="doSort('year')"></button>
          </th>
          <th class="has-text-centered">Capacity
            <button class="button is-small is-text" type="button" x-html="getSortIcon('turbine_capacity')"
                    @click="doSort('turbine_capacity')"></button>
          </th>
          <th class="has-text-centered">Turbines
            <button class="button is-small is-text" type="button" x-html="getSortIcon('project_capacity')"
                    @click="doSort('project_capacity')"></button>
          </th>
        </tr>
        </thead>
        <tbody>
        <template x-for="row in rows">
          <tr @click="doRowClicked($event)" data-id="xyz">
            <td x-html="row.state"></td>
            <td x-text="row.county"></td>
            <td class="has-text-centered" x-text="row.year"></td>
            <td class="has-text-centered" x-html="row.turbine_capacity"></td>
            <td class="has-text-centered" x-text="row.project_capacity"></td>
          </tr>
        </template>
        </tbody>
      </table>
      <div class="level">
        <div class="level-left">
          <p x-html="meta.status"></p>
        </div>
        <div class="level-right">
          <nav class="pagination" role="navigation" aria-label="pagination">
            <ul class="pagination-list">
              <li>
                <a class="pagination-link" aria-label="Goto first page" @click="goFirstPage()"
                   :disabled="getCurrentPage() == 1">
                  <svg class="icon">
                    <use xlink:href="../dist/icons.svg#page-first"></use>
                  </svg>
                </a>
              </li>
              <li>
                <a class="pagination-previous" @click="goPrevPage()" :disabled="getCurrentPage() == 1">
                  <svg class="icon">
                    <use xlink:href="../dist/icons.svg#page-prev"></use>
                  </svg>
                </a>
              </li>
              <li>

              </li>
              <li>
                <a class="pagination-next" @click="goNextPage()" :disabled="getCurrentPage() == getTotalPages()">
                  <svg class="icon">
                    <use xlink:href="../dist/icons.svg#page-next"></use>
                  </svg>
                </a>
              </li>
              <li>
                <a class="pagination-link" aria-label="Goto last page" @click="goLastPage()"
                   :disabled="getCurrentPage() == getTotalPages()">
                  <svg class="icon">
                    <use xlink:href="../dist/icons.svg#page-last"></use>
                  </svg>
                </a>
              </li>
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- <script defer src="https://unpkg.com/alpinejs@2.8.2/dist/alpine.js"></script> -->
{#<script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>#}

<!-- <script src="../dist/alpine.min.js" defer></script> -->
<script src="http://localhost:8080/dist/littleBIGtable.min.js"></script>

<script nonce="abc123">
  options = {
    'url': '/static/tmp/data.json',
    'limit': 25,
    'formatters': {
      'state': function (value, row) {
        return '<strong>' + value + '</strong>';
      },
      'turbine_capacity': function (value, row) {
        if (parseInt(value) < 1500) {
          return '<span class="has-text-warning has-text-weight-medium">' + value + "</span>";
        }
        if (parseInt(value) > 2000) {
          return '<span class="has-text-success has-text-weight-medium">' + value + "</span>";
        }
        return '<span class="has-text-link has-text-weight-medium">' + value + "</span>";
      }
    }
  }
  // this is an example of a row click event, in this example the row is specified as follows:
  // <tr @click="doRowClicked($event)" data-id="xyz">
  function doRowClicked(e) {
    console.log('The row was clicked, below is the event and the data-id of the row');
    console.log(e);
    console.log(e.target.parentNode.attributes['data-id'].value);
  }
</script>
