<script src="https://cdn.jsdelivr.net/npm/tom-select/dist/js/tom-select.complete.min.js"></script>

<div>

<div
    x-data="{
      multiple: false,
      create: false,
      value: {{ field.get_data() }},
      options: {{ field.get_tom_choices_for_js() }},
      new_val: '',
      current_val: '',
      new_zip: '',
      loading_towns:false,
      cities: null,
      zip_choices: null,
      zip_value: {{ field.get_data2() }},
      loading: false,
      first_load: true,
      init() {
        this.$nextTick(() => {
          let choices = new TomSelect(this.$refs.select, {
             create: this.create,
             createOnBlur: true,
             maxOptions: null,
             maxItems: 1,
             options: this.options,
             preload: false,
             labelField: 'label',
             searchField: ['label'],
             diacritics: true,
             });

          let zip_choices = new TomSelect(this.$refs.zip_select, {
             create: this.create,
             createOnBlur: true,
             maxOptions: null,
             maxItems: 1,
             preload: false,
             labelField: 'label',
             searchField: ['label'],
             diacritics: true,
             });

          zip_choices.disable()

          let refreshChoices = () => {
             let selection = [this.value];
             choices.setValue(this.value, true);
             if (this.value && this.value.length === 3 && this.new_val !== this.value) {
                this.loading = true;
                this.new_val = this.value;
                console.log(this.new_val);
                var url = `/kyc/towns/${this.new_val}`;
                console.log(url);
                fetch(url)
                      .then(response => response.json())
                      .then(data => {
                        this.cities = data;
                        this.loading = false;
                      });
            };
          };

          let displayCities = () => {
             if (this.current_val === this.new_val) return;
             console.log('new cities fetched');
             zip_choices.clear();
             zip_choices.clearOptions();
             zip_choices.addOptions(this.cities);
             zip_choices.refreshOptions(this.cities);
             zip_choices.enable();
             this.current_val = this.new_val;
             if (this.first_load){
               zip_choices.setValue(this.zip_value);
               this.first_load = false;
             };
          };

          this.$refs.select.addEventListener('change', () => {
            this.value = choices.getValue();
            refreshChoices();
          });

          this.$watch('value', () => refreshChoices());
          this.$watch('options', () => refreshChoices());
          this.$watch('cities', () => displayCities());

          refreshChoices();
          zip_choices.setValue(this.zip_value, false);
        })
      }
    }"
    class="col-span-12 w-full"
>

  <select
      id="{{ field.id }}"
      name="{{ field.name }}"
      {% if field.flags.required %}required{% endif %}
      x-ref="select"
  >
  </select>

<div class="min-h-10 block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm placeholder:text-gray-400 sm:text-sm sm:leading-6" >
{{ field.label2 }} <span class="font-semibold italic" x-show="loading"> Chargement en cours... </span>
<br>
<select
    x-ref="zip_select"
    id="{{field.id2}}"
    name="{{field.name2}}"
    {% if field.flags.required %}required{% endif %}
>
</select>
</div>

</div>
</div>
