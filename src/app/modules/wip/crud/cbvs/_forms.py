# Copyright (c) 2024, Abilian SAS & TCA
#
# Autogenerated. DO NOT EDIT.
#
from __future__ import annotations

from wtforms import Form, validators

# from wtforms.fields.choices import SelectField
from wtforms.fields.simple import StringField, TextAreaField

from app.flask.lib.wtforms.fields import (
    DateTimeField,
    RichSelectField,
    RichTextField,
    SimpleRichSelectField,
)
from app.modules.kyc.dynform import CountrySelectField


class ArticleForm(Form):
    # Group: headers
    titre = StringField("Titre", validators=[validators.InputRequired()])
    chapo = TextAreaField("Chapô")

    # Group: contenu
    contenu = RichTextField("Contenu", validators=[validators.InputRequired()])

    # Group: metadata
    genre = RichSelectField(
        "Genre",
        key="genre",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    section = RichSelectField(
        "Rubrique",
        key="section",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    topic = RichSelectField(
        "Thématique",
        key="topic",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )
    sector = RichSelectField(
        "Secteur",
        key="sector",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )
    media_id = SimpleRichSelectField(
        "Média",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )

    pays_zip_ville = CountrySelectField(
        name="pays_zip_ville",
        name2="pays_zip_ville_detail",
        label="Pays",
        id="pzv",
        id2="pzv_detail",
        label2="Code postal et ville",
        choices=[],
        # validators=validators_list,
        validate_choice=False,
        # render_kw=render_kw,
        readonly=0,
    )

    # Group: copyright
    copyright = RichSelectField(
        "Mention du copyright", key="copyright-mention", render_kw={"width": 3}
    )

    # Group: dates
    date_parution_prevue = DateTimeField(
        "Date/heure de parution prévue", render_kw={"width": 3}
    )
    date_publication_aip24 = DateTimeField(
        "Date/heure de publication sur AiPRESS24", render_kw={"width": 3}
    )
    date_paiement = DateTimeField("Date/heure de paiement", render_kw={"width": 3})

    class Meta:  # type: ignore[misc]
        groups = {
            "headers": {"label": "", "fields": ["titre", "chapo"]},
            "contenu": {"label": "Contenu de l'article", "fields": ["contenu"]},
            "metadata": {
                "label": "Métadonnées de l'article",
                "fields": [
                    "genre",
                    "section",
                    "topic",
                    "sector",
                    "media_id",
                    "pays_zip_ville",
                ],
            },
            "copyright": {"label": "Copyright de l'article", "fields": ["copyright"]},
            "dates": {
                "label": "Dates-clés de l'article",
                "fields": [
                    "date_parution_prevue",
                    "date_publication_aip24",
                ],
            },
        }


class AvisEnqueteForm(Form):
    # Group: headers
    titre = StringField("Titre", validators=[validators.InputRequired()])
    contenu = TextAreaField("Brief", validators=[validators.InputRequired()])

    # Group: metadata
    genre = RichSelectField(
        "Genre",
        key="genre",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    section = RichSelectField(
        "Rubrique",
        key="section",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    topic = RichSelectField(
        "Thématique",
        key="topic",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )
    sector = RichSelectField(
        "Secteur",
        key="sector",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )
    media_id = SimpleRichSelectField(
        "Média",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )

    # Group: dates
    date_debut_enquete = DateTimeField(
        "Date/heure de début",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    date_fin_enquete = DateTimeField(
        "Date/heure de fin",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    date_bouclage = DateTimeField(
        "Date/heure de bouclage",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    date_parution_prevue = DateTimeField(
        "Date/heure de parution prévue",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )

    class Meta:  # type: ignore[misc]
        groups = {
            "headers": {"label": "", "fields": ["titre", "contenu"]},
            "metadata": {
                "label": "Métadonnées",
                "fields": ["genre", "section", "topic", "sector", "media_id"],
            },
            "dates": {
                "label": "Dates-clés",
                "fields": [
                    "date_debut_enquete",
                    "date_fin_enquete",
                    "date_bouclage",
                    "date_parution_prevue",
                ],
            },
        }


class SujetForm(Form):
    # Group: headers
    titre = StringField("Titre")
    contenu = TextAreaField("Brief")
    # fixme: remove media for now
    # media = SelectField("Média", render_kw={"width": 3})

    # Group: metadata
    genre = RichSelectField(
        "Genre",
        key="genre",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    section = RichSelectField(
        "Rubrique",
        key="section",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    topic = RichSelectField(
        "Thématique",
        key="topic",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )
    sector = RichSelectField(
        "Secteur",
        key="sector",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )
    media_id = SimpleRichSelectField(
        "Média",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )

    # Group: dates
    date_limite_validite = DateTimeField("Date/heure de début", render_kw={"width": 3})
    date_parution_prevue = DateTimeField(
        "Date/heure de parution prévue", render_kw={"width": 3}
    )

    class Meta:  # type: ignore[misc]
        groups = {
            "headers": {"label": "", "fields": ["titre", "contenu"]},
            "metadata": {
                "label": "Métadonnées",
                "fields": ["genre", "section", "topic", "sector", "media_id"],
            },
            "dates": {
                "label": "Dates-clés",
                "fields": ["date_limite_validite", "date_parution_prevue"],
            },
        }


class CommandeForm(Form):
    # Group: headers
    titre = StringField("Titre")
    contenu = TextAreaField("Brief")

    # Group: metadata
    genre = RichSelectField(
        "Genre",
        key="genre",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    section = RichSelectField(
        "Rubrique",
        key="section",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    topic = RichSelectField(
        "Thématique",
        key="topic",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )
    sector = RichSelectField(
        "Secteur",
        key="sector",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )
    media_id = SimpleRichSelectField(
        "Média",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )

    # Group: dates
    date_limite_validite = DateTimeField("Date/heure de début", render_kw={"width": 3})
    date_bouclage = DateTimeField("Date/heure de bouclage", render_kw={"width": 3})
    date_parution_prevue = DateTimeField(
        "Date/heure de parution prévue", render_kw={"width": 3}
    )
    date_paiement = DateTimeField("Date/heure de paiement", render_kw={"width": 3})

    class Meta:  # type: ignore[misc]
        groups = {
            "headers": {"label": "", "fields": ["titre", "contenu"]},
            "metadata": {
                "label": "Métadonnées",
                "fields": ["genre", "section", "topic", "sector", "media_id"],
            },
            "dates": {
                "label": "Dates-clés",
                "fields": [
                    "date_limite_validite",
                    "date_bouclage",
                    "date_parution_prevue",
                    "date_paiement",
                ],
            },
        }


# --------------------------------------------------------------------------


class CommuniqueForm(Form):
    # --- Groupe: En-têtes ---
    titre = StringField("Titre du communiqué", validators=[validators.InputRequired()])

    # --- Groupe: Contenu ---
    chapo = TextAreaField("Chapô")
    contenu = RichTextField(
        "Contenu principal", validators=[validators.InputRequired()]
    )

    # --- Groupe: Métadonnées ---
    sector = RichSelectField(
        "Secteur",  # (NEWS-Secteur)
        key="sector",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )
    section = RichSelectField(
        "Rubrique",  # (NEWS-Rubrique)
        key="section",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )
    topic = RichSelectField(
        "Type d'info",  # (NEWS-Type d'info)
        key="topic",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )

    genre = RichSelectField(
        "Genre",  # (COM-Genre) -> TODO
        key="genre-com",
        render_kw={"width": 3},
        validators=[validators.InputRequired()],
    )

    pays_zip_ville = CountrySelectField(
        name="pays_zip_ville",
        name2="pays_zip_ville_detail",
        label="Pays",
        id="pzv",
        id2="pzv_detail",
        label2="Code postal et ville",
        choices=[],
        # validators=validators_list,
        validate_choice=False,
        # render_kw=render_kw,
        readonly=0,
    )

    # publisher_id = SimpleRichSelectField(
    #     "Éditeur / Organisme",
    #     render_kw={"width": 6},
    #     validators=[validators.InputRequired()],
    # )

    # --- Groupe: Dates ---
    embargoed_until = DateTimeField(
        "Date/heure d'embargo (parution prévue)",
        render_kw={"width": 3},
        validators=[validators.Optional()],
        format="%Y-%m-%dT%H:%M",
    )
    published_at = DateTimeField(
        "Date/heure de publication effective",
        render_kw={"width": 3},
        validators=[validators.Optional()],
        format="%Y-%m-%dT%H:%M",
    )

    class Meta:  # type: ignore[misc]
        groups = {
            "headers": {
                "label": "En-têtes du communiqué",
                "fields": ["titre", "chapo"],
            },
            "contenu": {
                "label": "Contenu du communiqué",
                "fields": ["contenu"],
            },
            "metadata": {
                "label": "Métadonnées du communiqué",
                "fields": [
                    "genre",
                    "section",
                    "topic",
                    "sector",
                    # "publisher_id",
                    "pays_zip_ville",
                ],
            },
            "dates": {
                "label": "Dates-clés du communiqué",
                "fields": [
                    "embargoed_until",
                    "published_at",
                ],
            },
        }


# --------------------------------------------------------------------------


class EventForm(Form):
    # --- Groupe: En-têtes ---
    titre = StringField("Titre de l'événement", validators=[validators.InputRequired()])

    # --- Groupe: Contenu ---
    chapo = TextAreaField("Chapô")
    contenu = RichTextField(
        "Contenu principal", validators=[validators.InputRequired()]
    )

    # --- Groupe: Métadonnées ---
    sector = RichSelectField(
        "Secteur",  # (NEWS-Secteur)
        key="sector",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )

    event_type = RichSelectField(
        "Type d'événement",  # EVENTS
        key="events",
        render_kw={"width": 6},
        validators=[validators.InputRequired()],
    )

    address = TextAreaField(
        "Adresse de l'événement (pour les événements en présentiel ou hybrides)",
        render_kw={"width": 6},
        validators=[validators.Optional()],
    )

    pays_zip_ville = CountrySelectField(
        name="pays_zip_ville",
        name2="pays_zip_ville_detail",
        label="Pays",
        id="pzv",
        id2="pzv_detail",
        label2="Code postal et ville",
        choices=[],
        # validators=validators_list,
        validate_choice=False,
        # render_kw=render_kw,
        readonly=0,
    )

    url = StringField(
        "URL de l'événement (pour les événements en ligne ou hybrides)",
        render_kw={"width": 6},
        validators=[validators.Optional()],
    )

    # --- Groupe: Dates ---
    start_time = DateTimeField(
        "Date/heure de début de l'événement",
        render_kw={"width": 3},
        validators=[validators.Optional()],
        format="%Y-%m-%dT%H:%M",
    )
    end_time = DateTimeField(
        "Date/heure de fin",
        render_kw={"width": 3},
        validators=[validators.Optional()],
        format="%Y-%m-%dT%H:%M",
    )

    class Meta:  # type: ignore[misc]
        groups = {
            "headers": {
                "label": "En-têtes de l'événement",
                "fields": ["titre", "chapo"],
            },
            "contenu": {
                "label": "Contenu de l'événement",
                "fields": ["contenu"],
            },
            "metadata": {
                "label": "Métadonnées de l'événement",
                "fields": [
                    "event_type",
                    "sector",
                    "address",
                    "pays_zip_ville",
                    "url",
                    # "publisher_id",
                ],
            },
            "dates": {
                "label": "Dates de l'événement",
                "fields": [
                    "start_time",
                    "end_time",
                ],
            },
        }
