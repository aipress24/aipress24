#
# SPDX-License-Identifier: AGPL-3.0-only
#

target-version = "py311"

exclude = [
    "migrations/",
    "src/app/modules/wip/crud/cbvs/_forms.py",
    "src/app/modules/superadmin",
    "src/app/modules/wallet",
    "scripts/",
    "doc/",
    "data/",
    "not-used-yet/",
    "debug/",
    #
    "docker/run.py",
    "tests-e2e/",
    "features/steps/steps.py",
    "gunicorn.conf.py",
    "icons/tasks.py",
    "nua/nua-install-build-agent.py",
]

lint.select = ["ALL"]

lint.ignore = [
    # Later...
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "COM", # flake8-commas
    "D1", # pydocstyle
    "D2", # pydocstyle
    "D4", # pydocstyle
    #"D100", # Missing docstring in public module
    #"D101", # Missing docstring in public class
    #"D102", # Missing docstring in public method
    #"D103", # Missing docstring in public function
    #"D104", # Missing docstring in package
    #"D105", # Missing docstring in magic method
    #"D106", # Missing docstring in public nested class
    #"D107", # Missing docstring in __init__
    "FBT", # flake8-boolean-trap
    "FIX", # flake8-fixme
    "INP", # flake8-no-pep420
    "PERF", # Perflint
    "PGH", # pygrep-hooks
    "SLF", # flake8-self
    "TC", # Move import into a type-checking block
    "TD", # flake8-todos
    "TRY", # tryceratops
    #
    # False positive, don't remove
    #
    "B019", # Use of `functools.lru_cache` or `functools.cache` on methods can lead to memory leaks
    "N805", # First argument of a method should be named `self`
    "PLR2004", # Magic value used in comparison
    "PLR2044", # Line w/ empty comment
    "RET504", # Unnecessary variable assignment before `return` statement
    "RUF001", # String contains ambiguous unicode character
    "RUF002", # Docstring contains ambiguous unicode character
    "RUF003", # Comment contains ambiguous unicode character
    "SIM108", # Use ternary operator
    "S101", # Use of `assert` detected
    "A002", #    builtin-argument-shadowing
    "A001", #    builtin-variable-shadowing
    #
    # Security issues that are not relevant (a priori)
    #
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "S603", # Using subprocess
    "S704", # Unsafe use of `markupsafe.Markup` detected
    # Fixable ?
    "ERA001", #  commented-out-code
    "T201", #    print
    "E501", #    line-too-long
    "BLE001", #  blind-except
    "PLC0415", # import-outside-top-level
    "C901", #    complex-structure
    "PLR0911", # too-many-return-statements
    "PLR0912", # too-many-branches
    "A004", #    builtin-import-shadowing
]

[lint.extend-per-file-ignores]
"test_*.py" = [
    "BLE001", #  blind-except
]

[lint.isort]
combine-as-imports = true
required-imports = ["from __future__ import annotations"]
